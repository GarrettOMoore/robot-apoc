{"version":3,"sources":["Images/Starbunker Logo.png","Images/FrappyHourAd.png","Images/StarbunkerTabBar.png","Components/RobotMap.jsx","Components/StarbucksMap.jsx","Components/WorldMap.jsx","Components/News.jsx","Components/Frappy.jsx","Components/Toggle.jsx","Components/Tab.jsx","Components/Counter.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","RobotMap","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","lat","lon","Map","ReactMapboxGl","accessToken","react_default","a","createElement","Fragment","height","style","zoom","containerStyle","lib_esm","Component","StarbucksMap","WorldMap","markers","humansAlive","center","News","handleClick","article","setState","currentArticle","clearArticle","newsList","title","detail","_this2","Card","bg","text","Img","variant","onClick","articleTitles","map","index","Frappy","className","maxWidth","src","img","width","Toggle","react_router_dom","to","Button","type","react_router","path","component","Components_Frappy","tabBar","tab","Counter","_React$Component","population","inherits","createClass","key","value","setInterval","e","React","App","Container","Image","Logo","fluid","Counter_Counter","Components_Toggle","Components_News","Tab","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c06bce09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Starbunker Logo.e97c0364.png\";","module.exports = __webpack_public_path__ + \"static/media/FrappyHourAd.fd8defe9.png\";","module.exports = __webpack_public_path__ + \"static/media/StarbunkerTabBar.df6a589c.png\";","import React, { Component } from 'react';\nimport ReactMapboxGl, { Marker, Layer } from 'react-mapbox-gl';\n\nclass RobotMap extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        lat: 37.7749,\n        lon: 122.4194\n      };\n    }\n    render() {\n      const Map = new ReactMapboxGl({\n        accessToken:\n          'pk.eyJ1IjoiZ2FycmV0dG1vb3JlIiwiYSI6ImNqdHQ0dWMyZzE3bDMzemxsNDJkM3hrdnoifQ.1v2jNBqVj1p6jhAKJkHY0A',\n        // center: [this.state.lon, this.state.lat]\n      });\n      return (\n        <>\n          <h4>ROBOT MAP PAGE</h4>\n          <p>HARSH ZONES BELOW / AVOID</p>\n          <Map\n            height='200px'\n            style={`mapbox://styles/garrettmoore/cjtujog6o02yx1fnz0psutn0a`}\n            zoom={[0.5]}\n            // center={[this.state.lon, this.state.lat]}\n            containerStyle={{ height: '40em' }}>\n            <Layer\n            style={`mapbox://styles/garrettmoore/cjtujog6o02yx1fnz0psutn0a`}\n            // center={[this.state.lon, this.state.lat]}\n            />\n          </Map>\n          \n        </>\n      );\n    }\n  }\n  \n  export default RobotMap;\n  ","import React, { Component } from 'react';\nimport ReactMapboxGl, { Marker, Layer } from 'react-mapbox-gl';\nimport { Container } from 'react-bootstrap';\n\nclass StarbucksMap extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        lat: 37.7749, \n        lon: 122.4194\n      };\n    }\n    render() {\n      const Map = new ReactMapboxGl({\n        accessToken:\n          'pk.eyJ1IjoiZ2FycmV0dG1vb3JlIiwiYSI6ImNqdHQ0dWMyZzE3bDMzemxsNDJkM3hrdnoifQ.1v2jNBqVj1p6jhAKJkHY0A',\n        // center: [this.state.lon, this.state.lat]\n      });\n      return (\n        <>\n          <h3>Find a Starbunker near you!</h3>\n        <Map\n            height='200px'\n            style={`mapbox://styles/garrettmoore/cjtuh2gkn00ja1gt3xa94pqmo`}\n            zoom={[0.5]}\n            // center={[this.state.lon, this.state.lat]}\n            containerStyle={{ height: '40em' }}>\n\n            <Layer\n            style={`https://api.mapbox.com/styles/v1/garrettmoore/cjtuh2gkn00ja1gt3xa94pqmo.html?fresh=true&title=true&access_token=pk.eyJ1IjoiZ2FycmV0dG1vb3JlIiwiYSI6ImNqc294aTc3bzByZXQzeW14dTlmbmkwamwifQ.un-bDQF-7GfJMc0NfTRpLg#0.6/0.000000/0.000000/0`}\n            // center={[this.state.lon, this.state.lat]}\n            />\n        </Map>\n\n        </>\n      );\n    }\n  }\n  \n  export default StarbucksMap;\n  ","import React, { Component } from 'react';\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport RobotMap from './RobotMap';\nimport StarbucksMap from './StarbucksMap';\nimport { Layer } from 'react-mapbox-gl';\n\nclass WorldMap extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        markers: [],\n        lat: 37.7749,\n        lon: 122.4194,\n        humansAlive: null\n      };\n    }\n   \n    // componentDidMount() {\n    //    let population = 3467856\n    //     setInterval((e)=>{\n    //         this.setState({\n    //             humansAlive: population - 1\n    //         })\n    //     }, 500)\n    // }\n   \n    render() {\n      const Map = new ReactMapboxGl({\n        accessToken:\n          'pk.eyJ1IjoiZ2FycmV0dG1vb3JlIiwiYSI6ImNqdHQ0dWMyZzE3bDMzemxsNDJkM3hrdnoifQ.1v2jNBqVj1p6jhAKJkHY0A',\n        center: [this.state.lon, this.state.lat]\n      });\n\n      return (\n        <>\n          {/* <p>Ominous tagline here</p> */}\n          {/* <h4>Currently {this.state.humansAlive} Humans Alive...</h4> */}\n          <Map\n            height='200px'\n            style={`mapbox://styles/garrettmoore/cjtue98zq02341fmk3f1n4spc`}\n            zoom={[1.5]}\n            // center={[this.state.lon, this.state.lat]}\n            containerStyle={{ height: '40em' }}>\n            <Layer\n              style={`mapbox://styles/garrettmoore/cjtue98zq02341fmk3f1n4spc`}\n             />\n\n          </Map>\n\n\n        </>\n      );\n    }\n  }\n  \n  export default WorldMap;\n  ","import React, { Component } from 'react';\nimport { Col, Card } from 'react-bootstrap';\n\nclass News extends Component {\n  constructor(props) {\n    super(props);\n      \n    this.state = {\n      currentArticle: null,\n      \n      newsList: [\n        {title: 'MASS ATTACK in Chicago!', detail: 'The City of Big Shoulders has become the city of Big Angry T800s. As of last Tuesday, the T800s have consumed all of the remaining deep dish pizza and have sunk all of the sailboats in Belmont Harbor. Officials are recommending... '},\n        {title: 'Trump Tower overrun by Decepticon!', detail: \"Dateline: March 29 - NYC's Trump Tower has been compromised by a large orange, trantrum-throwing Decepticon. The RAG recommends steering clear of the Tower...\" },\n        {title: 'Ultron has been spotted in Paris', detail: 'loem ipsum sit dolor...'}\n      ]\n    }\n  }\n\n  handleClick = (article) => {\n    this.setState({currentArticle: article})\n  }\n\n  clearArticle = () => {\n    this.setState({currentArticle: null})\n  }\n    render() {\n      if (!this.state.currentArticle){\n        let articleTitles = this.state.newsList.map( (article, index) => {\n          return (\n            <h3 onClick={() => this.handleClick(article)}> {article.title}</h3>\n          )\n        })\n\n        return (\n          <>\n            <Card \n              bg=\"warning\"\n              text=\"white\"\n            >\n              {/* <blockquote className=\"blockquote mb-0 card-body\"> */}\n                <Card.Img />\n                {articleTitles}\n              {/* </blockquote> */}\n            </Card>\n          </>\n        );\n      } else {\n        return (\n          <div>\n            <Card bg=\"danger\" text=\"white\" >\n              <Card.Img variant=\"top\" />\n\n              <small onClick={this.clearArticle}>\n                Back to articles\n              </small>\n              <h3>{this.state.currentArticle.title}</h3>\n              <p>{this.state.currentArticle.detail}</p>\n            </Card>\n          </div>\n        );\n    }\n  }\n}\n\n\nexport default News","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport { Button } from 'react-bootstrap';\nimport WorldMap from './WorldMap';\nimport RobotMap from './RobotMap';\nimport StarbucksMap from './StarbucksMap';\nimport img from '../Images/FrappyHourAd.png';\n\n\n\nconst Frappy = (props) => {\n\n    return (\n        <section className='Frappy' style={{maxWidth: \"100%\"}}>\n            <img src={img} className='frappy' width=\"100%\" />\n        </section>\n    )\n}\n\nexport default Frappy","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport { Button } from 'react-bootstrap';\nimport WorldMap from './WorldMap';\nimport RobotMap from './RobotMap';\nimport StarbucksMap from './StarbucksMap';\nimport Frappy from './Frappy';\n\nconst Toggle = (props) => {\n\n    return (\n        <Router>\n        <div className='button-box'>\n        <Link to='/WorldMap'><Button type='text'variant=\"dark\" >World</Button></Link>\n        <Link to='/RobotMap'><Button type='text'variant=\"danger\">Robot</Button></Link>\n        <Link to='/StarbucksMap'><Button type='text'variant=\"success\">Starbunker</Button></Link>\n        </div>\n        <Route path='/WorldMap' component={WorldMap} />\n        <Route path='/RobotMap' component={RobotMap} />\n        <Route path='/StarbucksMap' component={StarbucksMap} />\n        <Frappy/>\n        </Router>\n    )\n}\n\nexport default Toggle","import React, { Component } from 'react';\nimport tab from '../Images/StarbunkerTabBar.png';\n\nconst tabBar = (props) => {\n\n    return (\n        <section className='Frappy' style={{maxWidth: \"100%\"}}>\n            <img src={tab} width=\"100%\" />\n        </section>\n    )\n}\n\nexport default tabBar","import React, {useState, useEffect} from 'react'\n\nexport class Counter extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state= {\n            population: 38467856\n        }\n    }\n    componentDidMount() {\n        setInterval((e)=>{\n            this.setState({\n                population: this.state.population - 47\n            })\n        }, 800)\n    }\n\n    render() {\n        return (\n            <p className='countdown'>{this.state.population} humans remaining...</p>\n        )\n    }\n}","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Link} from 'react-router-dom'\nimport { Container, Image } from 'react-bootstrap'\nimport Logo from './Images/Starbunker Logo.png';\nimport WorldMap from './Components/WorldMap'\nimport SignUp from './Components/SignUp'\nimport FindStarbucks from './Components/FindStarbucks'\nimport StarbucksMap from './Components/StarbucksMap'\nimport FindRobots from './Components/FindRobots'\nimport News from './Components/News'\nimport Toggle from './Components/Toggle'\nimport Tab from './Components/Tab'\n\nimport RobotMap from './Components/RobotMap'\nimport {Counter} from './Components/Counter';\nimport './App.css';\nimport './index.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1 className=\"Title\">STARBUNKER</h1>\n        <Container>\n        <Image src={Logo} fluid />\n        <Counter />\n        {/* <FindStarbucks /> */}\n        <Toggle />\n        <News />\n        <Tab />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}